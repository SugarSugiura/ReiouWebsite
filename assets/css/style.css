@charset "UTF-8";

html {
    font-size: 100%;
}

body {
    color: #333;
    font-size: 1rem;
    font-family: 'Noto Sans', 'Noto Sans JP', sans-serif;
}
/*
css記載
下になんかあるとクリック範囲が変わる可能性有

ul {
  list-style: none;
}

ここまで
*/

a {
    color: #333;
    text-decoration: none;
    transition: all 0.5s;
    /*これを入れると透明になる瞬間が滑らかに*/
}
a:hover {
  opacity: 0.7;
}
img {
    max-width: 100%;
}
li {
    list-style: none;
}

/*
グローバルナビゲーション 未理解
「position: relative;」で、サブメニュー（Wide）の基準位置として設定

.wrapper .menu {
  /*
  これはメインサイトにも共有しているためバグの原因にもなる。
  よってどこかキリのいいところで新しいファイルを作って試してもよいか。
　
  max-width: 1000px;
  display: flex;
  justify-content: space-between;
  margin: 0 auto;
  position: relative;
}

.wrapper .menu > li {
  width: 25%;
  height: 50px;
  line-height: 30px;
  text-align: center;
}

.wrapper .menu > li:hover {
  background-color: #3c3636;
}
   /*
「display: block;」でリンク範囲を親要素と同じ範囲まで広げる
   
.wrapper .menu > li a {
  display: block;
}

    /*
ドロップダウン用のメニュー
初期状態は表示しないため、「visibility: hidden;」で非表示にしておく
    
.wrapper .menu .gakushu .menu-second {
  visibility: hidden;
}

     /*
Menu .gakushu,.shokai,.plan
「position: relative;」で、サブメニュー（一列系）の基準位置として設定
横書きを設定しているか
     
.wrapper .menu > .gakushu {
  position: relative;
}

      /*
「position: absolute;」で、singleクラスを基準に所定の位置に配置する
      
.wrapper .menu .gakushu .menu-second {
  width: 100%;
  background-color: #3c3636;
  position: absolute;
  top: 50px;
  left: 0;
}

       /*
透明度
       
.wrapper .menu .gakushu .menu-second li a:hover {
  opacity: 0.7;
}

        /*
ホバー時にサブメニュー（Single）を表示する
        
.wrapper .menu .gakushu:hover .menu-second {
  visibility: visible;
}

          /*
Menu Wide
「position: absolute;」で、menuクラスを基準に所定の位置に配置する
          
.wide .menu-second {
  width: 100%;
  background-color: #3c3636;
  display: flex;
  justify-content: flex-start;
  flex-wrap: wrap;
  position: absolute;
  top: 50px;
  left: 0;
}

.wide .menu-second li {
  width: 25%;
}
.wide .menu-second li a:hover {
  opacity: 0.7;
}

ホバー時にサブメニュー（Wide）を表示する
ここまでコピペ

.wide:hover .menu-second {
  visibility: visible;
}
*/

/*
コンテンツ幅を設定するための共通クラス
*/
.wrapper {
    max-width: 1200px;
    padding: 0 16px;
    margin: 0 auto;
}

/*
.wrapper {
    width: 100%;
    max-width: 1360px;
    margin: 0 auto;
    padding: 0 40px;
}
*/
/*
.readmore {
    font-size: 0.875rem;
    text-align: center;
}
*/
/*-------------------------------------------
ヘッダー
-------------------------------------------*/
#header {
    width: 100%;
    background-color: #fff;
    position: fixed;
    z-index: 10;
}
#header .site-title {
  padding: 20px 16px;
  /*header自体の位置(間隔)*/
  line-height: 1px;
  /*header縦の位置が変わったけどなぜかはわからん*/
}
/*
「display: inline-block;」でリンクを親要素の範囲に広げる
※blockを指定すると横幅いっぱいまで広がってしまうため、
inline-blockを設定している
*/

#header .site-title a {
    display: inline-block;
}
#navi {
    background-color: #333;
    /*
    display: flex;
    align-items: center;
    justify-content: space-between;
    */
}

#navi a {
    color: #fff;
}

.pc-area {
  display: block;
  /* pc版を表示 */
}
.phone-area {
  display: none;
  /* スマホ版を非表示 */
}
.toggle_btn {
  display: none;
  /* スマホ版を非表示 */
}
/*
nav li {
    font-size: 0.875rem;
    ヘッダー枠内の文字の大きさ
    padding: 10px 40px 10px 40px;
    ヘッダー枠内の空白調整
}
*/
/*
nav .menu,
nav .login {
  display: flex;
  align-items: center;
  max-width: 1200px;
  padding: 0 16px;
  margin: 0 auto;
}
*/

/*
nav .login li {
  padding: 10px 80px 10px 0px;
  margin-left: 0px;
  ヘッダー枠内のloginの間隔
}
*/

#navi ul {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

#navi li {
  font-size: 0.875rem;
  padding: 10px 60px 10px 0;
  margin: auto;
  /*ヘッダー枠内のmenuの位置*/
  /*margin-right: 0px;*/
  /*ヘッダー枠内のmenuの間隔*/
}
/*
#navi li {
  font-size: 0.875rem;
  padding: 10px 0 10px 0;
  margin: 0 auto;
}
*/

/*-------------------------------------------
top-title ヘッダーの次に来る初心者向けのとこ
-------------------------------------------*/

#top-title {
  /*display: flex;*/
  justify-content: space-between;
  padding-top: 150px;
  /*margin-bottom: 60px;*/
}

#top-title article {
  width: 50%;
}

/*初心者向けリストの上タイトル*/
#top-title .article-title {
  font-size: 20px;
  margin: 10px 0 15px 0;
}

/*初心者向けリストの下タイトル*/
#top-title .article-subtitle {
  font-size: 50px;
}

/*main*/
.product-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}
.product-list li {
    /*戦法リストのサイズ、1列4つ入れるなら23%*/
    width: 32%;
    /*戦法リストの間隔幅*/
    margin-top: 40px;
    margin-bottom: 40px;
}
.product-list img {
    margin-bottom: 10px;
    vertical-align: top;
}
.product-list p {
    font-size: 0.75rem;
}

/*-------------------------------------------
TOP、PRODUCTS
-------------------------------------------*/

.link-text {
  display: block;
  text-align: center;
  margin-bottom: 20px; /*View Moreのbottom間隔*/
}

/*-------------------------------------------
footer　※以下コピペ理解未完
-------------------------------------------*/
#footer {
  font-size: 0.875rem;
  background-color: #f7f7f7;
}
#footer .content {
  display: flex;
  justify-content: space-between;
  padding-top: 50px;
 padding-bottom: 50px;
}
#footer .item {
  width: 30%;
}
#footer .footer-title {
  font-size: 1.125rem;
  font-weight: bold;
  margin-bottom: 30px;
}
#footer ul.about-list {
  margin: 20px 0;
}
#footer ul.about-list li {
  margin-bottom: 5px;
}
#footer ul.about-list .arrow {
  position: relative;
  display: inline-block;
  padding-left: 12px;
  color: #333;
}
/*
疑似要素で三角矢印を表示
border～プロパティで三角を作り、positionで位置調整
*/
#footer ul.about-list .arrow::before {
  content: '';
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 6px 0 6px 8px;
  border-color: transparent transparent transparent #333;
  position: absolute;
  top: 50%;
  left: 0;
  margin-top: -6px;
}
#footer .menu-list {
  border-bottom: solid  1px #777;
}
#footer .menu-list > li {
  border-top: solid  1px #777;
  padding: 15px;
  text-align: left;
}
#footer .copyright {
  font-size: 0.750rem;
  text-align: center;
  padding: 10px 0;
}

/*
otoiawase
.select, .input, .radio, .textarea
*/
/*
#top {
  padding-top: 150px;
}
*/
.select {
  border-radius: 5px;
  padding: 10px;
  border: 1px solid #ccc;
  min-width: 500px;
}
.input {
  border-radius: 5px;
  padding: 10px;
  border: 1px solid #ccc;
  min-width: 500px;
}
.radio {
  margin: auto;
}
.textarea {
  border-radius: 5px;
  padding: 10px;
  border: 1px solid #ccc;
  min-width: 500px;
  min-height: 100px;
}
label, input, textarea, select, button {
  cursor: pointer;
}

/*-------------------------------------------
SP
-------------------------------------------*/

@media screen and (max-width: 767px) {

  .pc-area {
    display: none;
    /* pc版を非表示 */
  }
  .phone-area {
    display: block;
    /* スマホ版を表示 */
  }
  /*-------------------------------------------
  header
  -------------------------------------------*/
  #header .site-title {
    padding: 20px 16px;
  }

  /*
  「position: fixed;」でヘッダーを固定し、「z-index: 10;」で前面に表示
  ※他のコンテンツでpositionをrelative、absolute、fixedのいずれかに
  設定している場合は、z-indexの数値が大きい方が前面に表示される
  */
  #header {
    width: 100%;
    height: 80px;
    background-color: #fff;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: fixed;
    left: 0;
    right: 0;
    z-index: 10;
  }
  /*
  ハンバーガーメニュー
  メニューが閉じている時は、「left: -300px;」で画面左に隠し、
  「opacity: 0;」で非表示にしている
  */
  #navi-phone {
    position: fixed;
    top: 0;
    left: -300px;
    width: 300px;
    color: #fff;
    padding: 36px 50px;
    transition: all 0.5s;
    z-index: 20;
    opacity: 0;
  }
  #navi-phone a {
    color: #fff;
  }
  #navi-phone li {
    margin-bottom: 14px;
  }

  }
  .open #navi-phone {
    left: 0;
    opacity: 1;
  }
  .toggle_btn {
    display: block;
    /* スマホ版を表示 */
    width: 30px;
    height: 30px;
    position: relative;
    transition: all 0.5s;
    cursor: pointer;
    z-index: 20;
  }
  /*
  ハンバーガーメニューの線の設定（メニューが閉じている時）
  */
  .toggle_btn span {
    display: block;
    position: absolute;
    width: 30px;
    height: 2px;
    background-color: #333;
    border-radius: 4px;
    transition: all 0.5s;
  }
  /*
  1本目の線の位置を設定
  */
  .toggle_btn span:nth-child(1) {
    top: 10px;
  }
  /*
  2本目の線の位置を設定
  */
  .toggle_btn span:nth-child(2) {
    bottom: 10px;
  }
  /*
  ハンバーガーメニューの線の設定（メニューが開いている時）
  線の色を白に変更
  */
  .open .toggle_btn span {
    background-color: #fff;
  }
  /*
  1本目の線を-45度回転
  */
  .open .toggle_btn span:nth-child(1) {
    -webkit-transform: translateY(4px) rotate(-45deg);
    transform: translateY(4px) rotate(-45deg);
  }
  /*
  2本目の線を45度回転
  */
  .open .toggle_btn span:nth-child(2) {
    -webkit-transform: translateY(-4px) rotate(45deg);
    transform: translateY(-4px) rotate(45deg);
  }
  #mask {
    display: none;
    transition: all 0.5s;
  }
  /*
  メニューを開いている時は、全体を黒背景にする
  */
  .open #mask {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000;
    opacity: .8;
    z-index: 10;
    cursor: pointer;
  }

  /*-------------------------------------------
  top-title
  -------------------------------------------*/

  #top-title {
    padding-top: 100px;
    flex-direction: column;
  }
  /*Galaxy Foldでは"駒の動かし方"が2行になるため調整必要*/

  #top-title article {
    width: 100%;
    margin-bottom: 30px;
  }

  /*-------------------------------------------
  container
  -------------------------------------------*/
  #container {
    flex-direction: column;
  }
  main {
    width: 100%;
  }

  /*-------------------------------------------
  aside
  -------------------------------------------*/
  #sidebar {
    width: 100%;
    padding: 0;
  }

  /*-------------------------------------------
  footer
  -------------------------------------------*/
  #footer .content {
    flex-direction: column;
  }
  #footer .item {
    width: 100%;
    margin-bottom: 30px;
  }
}